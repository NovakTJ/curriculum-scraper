--- PAGE 1 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
❖ Inizijalizacija nulom (zero initialization) se obavlja u sledećim slučajevima:
• Za svaku imenovanu varijablu sa statičkim trajanjem skladišta ili trajanjem 
skladišta vezanim za nit (thread local), pod uslovom da nije inicijalizovana 
konstantnom inicijalizacijom, a pre svake druge inicijalizacije:
static T t; 
• Kao deo postupka inicijalizacije vrednošću, za neklasne tipove i za članove 
klasnih tipova koji su inicijalizovani vrednošću i koji nemaju konstruktore, 
uključujući inicijalizaciju vrednošću agregata za koje nisu zadati inicijalizatori:
T(); 
T t = {}; 
T{}; 
• Kada se niz znakova inicijalizuje string literalom koji je kraći od tog niza, 
ostatak niza se inicijalizuje nulama:
char a[n] = "";
Inicijalizacija nulom
 411

--- PAGE 2 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
❖ Inizijalizacija nulom radi sledeće:
• Ako je T skalarni tip, inicijalna vrenost objekta je celobrojna konstanta nula eksplicitno konvertovana u tip T; za 
pokazivače, to je uvek null vrednost, čak i ako se ona ne predstavlja binarnom vrednošću nula
• Ako je T klasni tip, svi podobjekti osnovne klase i članovi se inicijalizuju nulama, a konstruktori se ignorišu
• Ako je T niz, elementi se inicijalizuju nulama
• Za reference se ništa ne radi
static T t; 
❖ Na primer:
struct X { 
  int m; 
}; 
int i; 
int* p; 
int main () { 
  X x{}; 
  int a[2]{1}; 
  int j{}; 
  delete p; 
  cout<<x.m<<i<<a[1]<<j; 
}
Inicijalizacija nulom
 412
