--- PAGE 1 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
❖ Posmatrajmo izgled slobodnog prostora tokom sukcesivnih operacija 
alokacije i dealokacije delova memorije različite veličine: kada se dealocira 
neki dinamički objekat, u oslobođeni prostor njegove veličine može se 
alocirati nov dinamički objekat koji je najčešće manji (može biti i jednak, što je 
manje verovanto, ali nikako veći) od tog dela; tako ostaje fragment slobodne 
memorije koji možda nije dovoljan da se u njega smesti bilo koji nov objekat
❖ Posle dužeg rada programa može se dogoditi to da je slobodna memorija 
rascepkana (fragmentirana) na male slobodne delove, pa iako je ukupno ima 
sasvim dovoljno, nijedan slobodan deo nije dovoljno velik da bi se u njega 
smestio traženi objekat; tada program više ne može alocirati prostor za 
traženi novi dinamički objekat i više ne radi regularno
❖ Ovakav problem naziva se fragmentacija memorije (memory fragmentation)
❖ Ovaj problem nije primetan ni značajan kod programa koji rade neko vreme i 
onda se gase, npr. kod interaktivnih uslužnih programa, ali kod programa 
koji rade neprekidno, npr. onih ugrađenih u hardver koji radi neprekidno 
(embedded software) može da bude veoma ozbiljan
Operatori new i delete
 454


--- PAGE 2 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
❖ Treba primetiti da ovaj problem, za razliku od problema curenja memorije, nije 
posledica bilo kakve greške u programiranju, već se dešava tokom regularnog 
izvršavanja sasvim regularnih programa
❖ Ovaj problem je posledica toga što se objekti različite veličine alociraju u istom 
zajedničkom prostoru, pa se u oslobođeni prostor jedne veličine smešta objekat 
manje veličine, i tom prilikom nastaje fragment slobodne memorije
❖ Rešenje ovog problema tzv. kompakcijom (pomeranjem alociranih objekata tako da 
se oni spoje, a slobodan prostor fuzioniše na kraju) nije primenjiv, jer objekti mogu 
da imaju pokazivače u sebi i da na njih ukazuju pokazivači za koje se ne zna gde 
su u memoriji; osim toga, takvo rešenje trošilo bi značajno režijsko vreme zbog 
kopiranja mnogo delova memorije
❖ Ovo može da bude motiv za preuzimanje kontrole nad alokacijom objekata neke 
klase, recimo tako što se za njih odvoji poseban niz pregradaka (slotova) iste 
veličine: kada se u oslobođeni prostor jedne veličine smešta objekat iste veličine, 
nema fragmenta
Operatori new i delete
