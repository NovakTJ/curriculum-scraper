--- PAGE 1 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
Klasa kao realizacija apstrakcije
❖ Banalno rešenje: preslikati dati opis u klase i raspored njihovih svojstava
❖ Problemi:
• nepotrebno mnogostruko kopiranje podataka, jer jedna osoba ima mnogo izdatih dokumenata
• ako je potrebno čuvati istoriju promena podataka, prave se kopije svih podataka, iako se menja samo 
manji deo njih; gde čuvati te promene?
 86
Person
personalID : PersonalID 
dateOfBirth : Date 
placeOfBirth : Text 
gender : Gender 
firstName : Text 
lastName : Text 
address : Text 
place : Text 
photo : Binary 
fingerprint : Binary 
irisScan : Binary 
…
1 * Document
dateOfBirth : Date 
placeOfBirth : Text 
gender : Gender 
firstName : Text 
lastName : Text 
address : Text 
place : Text 
photo : Binary 
fingerprint : Binary 
irisScan : Binary 
…
UML simbol za asocijaciju (association): relacija između klasa 
koja deﬁniše skup veza (link) koje mogu postojati između 
objekata tih klasa.
UML oznaka multiplikativnosti (multiplicity) 
kraja asocijacije:  jedan objekat klase 
Document može biti vezan za tačno 1 objekat 
klase Person vezama ove asocijacije.
Jedan objekat klase Person može biti vezan za 
proizvoljno mnogo (*) objekata klase 
Document vezama ove asocijacije.

--- PAGE 2 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
Klasa kao realizacija apstrakcije
❖ Ideja boljeg rešenja: uvesti koncept Personalnog zapisa (Personal Record) koji sadrži određene lične podatke:
• umesto da sadrže kopije, Osoba i Dokument referenciraju (vezani su za) Personalne zapise: sve dok se 
podatak ne menja, ovi objekti vezani su za iste zapise
• prilikom promene nekog podatka, pravi se nova kopija zapisa u kom se taj podatak menja
• kako bi se dodatno smanjilo kopiranje, podaci su grupisani u različite specijalizacije zapisa, po tome 
koliko se često i da li se zajedno ili odvojeno menjaju
• za Osobu se mogu čuvati i raniji zapisi, sa svim podacima koji su ikada bili registrovani za tu osobu 
(nezavisno od Dokumenata u kojima su upotrebljeni)
 87
dateOfBirth : Date 
placeOfBirth : Text 
gender : Gender
* *PersonalRecord
BirthRecord
firstName : Text 
lastName : Text
NameRecord
address : Text 
place : Text
AddressRecord
photo : Binary 
fingerprint : Binary 
irisScan : Binary
BiometricRecord
0..1 *
0..1 *
currentRecords
oldRecords DocumentPerson
