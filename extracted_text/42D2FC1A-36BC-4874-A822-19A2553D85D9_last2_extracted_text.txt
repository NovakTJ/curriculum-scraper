--- PAGE 1 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
❖ Binarni, inﬁksni aritmetički operatori, kao i binarni, inﬁksni 
operatori nad bitima se obično preklapaju kao funkcije nečlanice, jer 
su im operandi ravnopravni (simetrični)
❖ Pošto su uobičajeno praćeni operatorima složene dodele, obično se 
aritmetički operatori svode na operatore složene dodele na sledeći 
način:
X& X::operator+= (const X& other) { 
  … 
  return *this; 
} 
X operator+ (const X& x1, const X& x2) { 
  X temp(x1); 
  temp += x2; 
  return temp; 
}
Preporučeni načini preklapanja operatora
 445

--- PAGE 2 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
❖ Binarni, inﬁksni relacioni operatori se obično preklapaju kao funkcije nečlanice, jer su im 
operandi ravnopravni
❖ Preklapaju se tako što se implementira operator == i, ako je potrebno, operator <, a onda ostali 
svode na njih:
bool operator== (const X& x1, const X& x2) { 
  … 
} 
inline bool operator!= (const X& x1, const X& x2) 
  { return !(x1==x2); } 
bool operator< (const X& x1, const X& x2) { 
  … 
} 
inline bool operator> (const X& x1, const X& x2) 
  { return x2<x1; } 
inline bool operator<= (const X& x1, const X& x2) 
  { return (x1<x2)||(x1==x2); } 
inline bool operator>= (const X& x1, const X& x2) 
  { return x2<=x1; }
Preporučeni načini preklapanja operatora
 446
