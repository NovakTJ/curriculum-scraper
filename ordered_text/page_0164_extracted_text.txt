--- PAGE 1 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
Prevođenje
❖ Program na jeziku C++ sastoji se od jednog ili više modula, pri čemu se modulom smatra 
sadržaj jednog fajla za izvornim kodom (tipična ekstenzija imena je .cpp)
❖ Svaki izvorni fajl je odvojena jedinica prevođenja (compilation unit): svaki fajl se prevodi 
odvojeno i nezavisno: kada prevodilac (compiler) prevodi jedan fajl, ne izlazi iz granica tog 
fajla, odnosno ne tretira druge fajlove programa
❖ Kada prevodi jedan fajl sa izvornim kodom (.cpp), prevodilac će generisati jedan fajl sa 
prevedenim kodom, fajl sa tzv. objektnim kodom (object ﬁle, tipična ekstenzija .obj ili .o; termin 
nema veze sa objektno orijentisanim programiranjem)
❖ Bilo koja greška u prevođenju uzrokuje da prevodilac ne proizvede izlazni obj fajl; bez 
obzira na to, prevodilac po pravilu nastavlja prevođenje, pokušavajući da prevaziđe svaku 
grešku i prijavljuje sve eventualne druge greške na koje naiđe
❖ Fajl sa izvornim kodom sastoji se isključivo od deklaracija: tipova (uključujuči i klase), 
funkcija, objekata i drugog. Deklaracija (declaration) je iskaz koji uvodi identiﬁkator u 
program
❖ Svako ime (identiﬁkator) koje se koristi u programu mora najpre biti deklarisano, u 
suprotnom će prevodilac prijaviti grešku u prevođenju
 164

--- PAGE 2 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
Prevođenje
❖ Prevodilac učitava znak po znak iz ulaznog fajla sa izvornim kodom programa; iako tekst programa ljudi 
doživaljavaju dvodimenzionalno (u ravni), pri čemu im te dve dimenzije pomažu u čitanju i razumevanju (prelom 
redova, proredi i uvlačenje, odnosno “nazubljivanje” koda), prevodilac kod tumači isključivo sekvencijalno
❖ Prevodilac najpre učitane znakove grupiše u veće celine, tzv. leksičke elemente ili lekseme (lexical element, lexem), ili 
žetone (token), u skladu sa pravilima jezika; ova faza prevođenja naziva se leksička analiza (lexical analysis); na primer, 
u sledećem delu koda, različitim bojama označene su različite lekseme:
if (i++ +j>=0 && i<this->size()) 
❖ U daljem postupku prevodilac tretira lekseme kao integralne celine, odnosno kao elemente od kojih su izgrađeni 
krupniji jezički iskazi, tj. rečenice
❖ Prevodilac tokom prevođenja prepoznaje te veće jezičke celine (rečenice) na osnovu gramatike (grammar) jezika; ova 
faza prevođenja naziva se parsiranje (parsing); u slučaju prestupa nekog pravila gramatike, prevodilac prijavljuje 
grešku u prevođenju
❖ Za prepoznate rečenice i elemente u njima, prevodilac proverava ostala pravila jezika, tzv. semantička pravila 
(semantic rules), i opet prijavljuje greške u slučaju prestupa
❖ Konačno, za one elemente rečenica za koje je to deﬁnisano semantikom jezika, prevodilac generiše sadržaj u 
prevedenom objektnom fajlu u kome se principijelno nalazi:
• binarni mašinski kod za mašinske (procesorske) instrukcije
• alociran prostor za određene kategorije objekata sa tzv. statičkim trajanjem skladištenja (static storage duration)
 165
