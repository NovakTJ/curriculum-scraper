--- PAGE 1 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
Pokazivači na objekte
❖ Pokazivač tipa void* može da ukazuje na bilo koji objekat: postoji implicitna 
konverzija iz bilo kog pokazivačkog tipa u tip void*; sa objektom na koji 
ukazuje ovaj pokazivač ne može se raditi ništa
❖ Ovakav pokazivač se vrlo ograničeno upotrebljava, tipično u starim C 
interfejsima, gde se prihvata pokazivač na bilo šta; na primer, nit (thread) u 
biblioteci POSIX kreira se zadavanjem argumenta funkcije koji je pokazivač 
tipa void*
❖ Da bi se preko tog pokazivača uradilo nešto sa onim na šta on ukazuje, 
mora se izvršiti eksplicitna konverzija na odredišni tip, s tim da 
odgovornost za ispravnost te konverzije nosi programer:
void DocumentSaver::run (void* p) { 
  DocumentSaver* ds = static_cast<DocumentSaver*>(p); 
  if (ds) ds->save(); 
  delete ds; 
}
 214

--- PAGE 2 ---
Septembar 2024. Copyright 2018-2024 by Dragan Milićev
Pokazivači na objekte
❖ Pokazivač može da ne ukazuje ni na šta; vrednost takvog pokazivača naziva se null vrednost
❖ Simbolička vrednost null označava se kao nullptr; pre njegovog uvođenja, kao simbolička 
vrednost null koristio se:
• literal 0, sa simboličkom vrednošću null za pokazivače
• makro NULL defnisan u standardnom zaglavlju jezika C 
❖ Ove stare simboličke vrednosti mogu i dalje da se upotrebljavaju, ali one mogu da dovedu 
do drugačijeg tumačenja tipa u različitim kontekstima (kao celobrojni literal 0) , dok je 
nullptr različitog tipa
❖ Pokazivač se može:
• inicijalizovati vrednošću null ili mu se dodeliti ta vrednost:
Clock* pc1 = nullptr; 
• porediti na jednakost/nejednakost sa tom vrednošću
if (pc1==nullptr)… 
if (pc1!=nullptr)…
 215
